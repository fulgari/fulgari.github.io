{"pageProps":{"post":{"date":"2022-02-21","slug":"npm-vs-yarn","content":"<h1>npm 和 yarn 的对比</h1>\n<h2>简而言之</h2>\n<p>Yarn over npm.</p>\n<p>yarn 是 facebook 主导的 Node.js 包管理工具，它能够：</p>\n<ol>\n<li>\n<p>安装更快（并行安装，相较于与 npm 的串行更快）</p>\n</li>\n<li>\n<p>离线安装（对已经安装过的包，支持离线安装）</p>\n</li>\n<li>\n<p>使用 yarn.lock 文件保证锁定所有依赖的版本（npm v5.x 开始支持）</p>\n</li>\n<li>\n<p>更安全（防止在安装时执行代码）</p>\n</li>\n</ol>\n<h2>使用</h2>\n<ul>\n<li>\n<p>yarn 能够自动读取 <code>package.json</code> 文件，格式几乎都可以互相兼容。生成独有的 <code>yarn.lock</code> 文件，确保其他人使用 yarn 能够获取一样的依赖。</p>\n</li>\n<li>\n<p>大型项目中，<code>package.json</code> 中信息不够明确，依赖关系出现冲突，这时候应该先删除 <code>node_modules</code> 重新安装，使得依赖项的版本更明确。这时再转换到 yarn 上。</p>\n</li>\n</ul>\n<h2>npm 和 yarn 的命令之区别</h2>\n<blockquote>\n<p>cf: <a href=\"https://classic.yarnpkg.com/en/docs/migrating-from-npm#toc-cli-commands-comparison\">CLI commands comparison</a></p>\n</blockquote>\n<p>| <strong>npm (v5)</strong>                          | <strong>Yarn</strong>                      |\r\n|---------------------------------------|-------------------------------|\r\n| npm install                           | yarn add                      |\r\n| (N/A)                                 | yarn add --flat               |\r\n| (N/A)                                 | yarn add --har                |\r\n| npm install --no-package-lock         | yarn add --no-lockfile        |\r\n| (N/A)                                 | yarn add --pure-lockfile      |\r\n| npm install [package] --save          | yarn add [package]            |\r\n| npm install [package] --save-dev      | yarn add [package] --dev      |\r\n| (N/A)                                 | yarn add [package] --peer     |\r\n| npm install [package] --save-optional | yarn add [package] --optional |\r\n| npm install [package] --save-exact    | yarn add [package] --exact    |\r\n| (N/A)                                 | yarn add [package] --tilde    |\r\n| npm install [package] --global        | yarn global add [package]     |\r\n| npm update --global                   | yarn global upgrade           |\r\n| npm rebuild                           | yarn add --force              |\r\n| npm uninstall [package]               | yarn remove [package]         |\r\n| npm cache clean                       | yarn cache clean [package]    |\r\n| rm -rf node_modules  npm install      | yarn upgrade                  |\r\n| npm version major                     | yarn version --major          |\r\n| npm version minor                     | yarn version --minor          |\r\n| npm version patch                     | yarn version --patch          |</p>\n<h2>结论</h2>\n<p>npm 5.x 之后，磨平了和 yarn 之间的很多差距，比如安装速度、离线安装和依赖版本的锁定等问题，不过 yarn 某些情况下还是会快些。使用哪一个，也仅仅是用户的偏好的问题。</p>\n"}},"__N_SSG":true}